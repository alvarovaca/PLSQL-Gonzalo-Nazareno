// 1. Realiza una función llamada DevolverMejorPuesto que reciba un dorsal y un tipo de etapa y devuelva el
//    mejor puesto en el que dicho corredor terminó una etapa de ese tipo. Debes contemplar las siguientes
//    excepciones: Corredor inexistente, Tipo de etapa incorrecto, Etapa no disputada y Etapa posterior al
//    abandono del corredor. (2 puntos).
	
create or replace function DevolverMejorPuesto(p_dorsal ciclistas.dorsal%type, p_tipo etapas.tipo%type)
return varchar2
is
    v_mejorpuesto   clasificacionetapas.posicion%type
begin
    ComprobarCorredor(p_dorsal);
    ComprobarTipo(p_tipo);
    ComprobarSiDisputada(p_tipo);
    ComprobarAbandonoPrematuro(p_dorsal, p_tipo);
    select min(posicion) into v_mejorpuesto
    from clasificacionetapas
    where dorsal=p_dorsal
    and numetapa in (   select numetapa
                        from etapas 
                        where tipo=p_tipo);
    return v_mejorpuesto;
end DevolverMejorPuesto;
	
create or replace procedure ComprobarCorredor(p_dorsal ciclistas.dorsal%type)
is
	v_dorsal ciclistas.dorsal%type;
begin
	select dorsal into v_dorsal
	from ciclistas
	where dorsal=p_dorsal;
exception
	when NO_DATA_FOUND then
		raise_application_error(-20001,'Corredor inexistente: '||p_dorsal);	
end ComprobarCorredor;

create or replace procedure ComprobarTipo(p_tipo etapas.tipo%type)
is
	v_existetipo number;
	e_tipo_inexistente exception;
begin
	select count(*) into v_existetipo
	from etapas
	where tipo=p_tipo;
	if v_existetipo=0 then
		raise e_tipo_inexistente;
	end if;
exception
	when e_tipo_inexistente then
		raise_application_error(-20002,'Tipo de etapa inexistente: '||p_tipo);
end ComprobarTipo;

create or replace procedure ComprobarSiDisputada(p_tipo etapas.tipo%type)
is
	v_primeraetapatipo etapas.numetapa%type;
	v_ultimaetapadisputada etapas.numetapa%type;
	e_tipo_inexistente exception;
begin
	select min(numetapa) into v_primeraetapatipo
	from etapas
	where tipo=p_tipo;
	select max(numetapa) into v_ultimaetapadisputada
	from clasificacionesetapas;
	if v_primeraetapatipo>v_ultimaetapadisputada then
		raise e_tipo_nodisputado;
	end if;
exception
	when e_tipo_nodisputado then
		raise_application_error(-20003,'No se han disputado aun etapas de tipo'||p_tipo);
end ComprobarSiDisputada;

create or replace procedure ComprobarAbandonoPrematuro(p_dorsal ciclistas.dorsal%type, p_tipo etapas.tipo%type)
is
	v_etapaabandono etapas.numetapa%type;
	v_primeraetapatipo etapas.numetapa%type;
	e_abandono_prematuro exception;
begin
	select min(numetapa) into v_etapaabandono
	from clasificacionesetapas
	where dorsal=p_dorsal and posicion='Abandono';
	select min(numetapa) into v_primeraetapatipo
	from etapas
	where tipo=p_tipo;
	if v_etapaabandono<v_primeraetapatipo then
		raise e_abandono_prematuro;
	end if;
exception
	when e_abandono_prematuro then
		raise_application_error(-20004,'El corredor con dorsal '||p_dorsal||
					       ' abandonó antes de correr etapas de tipo '||p_tipo);

end ComprobarAbandonoPrematuro;
	
// 2. Realiza una función llamada PasarASegundos que reciba una distancia al ganador en horas, minutos y 
//    segundos y devuelva dicha distancia en segundos. Realiza también la función opuesta, Pasarahhmmss que
//    recibe un número de segundos y lo devuelve en formato hh:mm:ss (2 puntos)

// 3. Realiza una función DevolverSumaDistancias que reciba un dorsal y un número de etapa y devuelva la suma
//    de las distancias a los ganadores de cada etapa en horas, minutos y segundos hasta la etapa recibida
//    como parámetro. Debes contemplar la excepción de que el corredor haya abandonado en alguna etapa, en cuyo
//    caso no se realizará el cálculo. (2 puntos)

// 4. Realiza un procedimiento llamado MostrarClasificacionGeneral que reciba un número de  etapa y muestre la
//    clasificación general al término de dicha etapa con la posición de cada uno de los ciclistas que
//    permanecen aun en carrera ordenados por distancia total al lider. Puedes usar una tabla auxiliar en la
//    base de datos si lo deseas. (3 puntos).

//          1. NombreCorredor CodEquipo 
//          2. NombreCorredor CodEquipo DistanciaTotalalLider
//          3. NombreCorredor CodEquipo DistanciaTotalalLider
//          ...
//
//    La DistanciaTotalalLider se presentará en formato hh:mm:ss
